// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"runtime"
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gio/v2"
)

// #include <stdlib.h>
// #include <adwaita.h>
// #include <glib-object.h>
import "C"

// glib.Type values for adw-enum-list-model.go.
var (
	GTypeEnumListItem  = externglib.Type(C.adw_enum_list_item_get_type())
	GTypeEnumListModel = externglib.Type(C.adw_enum_list_model_get_type())
)

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: GTypeEnumListItem, F: marshalEnumListItem},
		{T: GTypeEnumListModel, F: marshalEnumListModel},
	})
}

// EnumListItemOverrider contains methods that are overridable.
type EnumListItemOverrider interface {
}

// EnumListItem: AdwEnumListItem is the type of items in a enumlistmodel.
type EnumListItem struct {
	_ [0]func() // equal guard
	*externglib.Object
}

var (
	_ externglib.Objector = (*EnumListItem)(nil)
)

func classInitEnumListItemmer(gclassPtr, data C.gpointer) {
	C.g_type_class_add_private(gclassPtr, C.gsize(unsafe.Sizeof(uintptr(0))))

	goffset := C.g_type_class_get_instance_private_offset(gclassPtr)
	*(*C.gpointer)(unsafe.Add(unsafe.Pointer(gclassPtr), goffset)) = data

}

func wrapEnumListItem(obj *externglib.Object) *EnumListItem {
	return &EnumListItem{
		Object: obj,
	}
}

func marshalEnumListItem(p uintptr) (interface{}, error) {
	return wrapEnumListItem(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Name gets the enum value name.
//
// The function returns the following values:
//
//    - utf8: enum value name.
//
func (self *EnumListItem) Name() string {
	var _arg0 *C.AdwEnumListItem // out
	var _cret *C.char            // in

	_arg0 = (*C.AdwEnumListItem)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.adw_enum_list_item_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))

	return _utf8
}

// Nick gets the enum value nick.
//
// The function returns the following values:
//
//    - utf8: enum value nick.
//
func (self *EnumListItem) Nick() string {
	var _arg0 *C.AdwEnumListItem // out
	var _cret *C.char            // in

	_arg0 = (*C.AdwEnumListItem)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.adw_enum_list_item_get_nick(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))

	return _utf8
}

// Value gets the enum value.
//
// The function returns the following values:
//
//    - gint: enum value.
//
func (self *EnumListItem) Value() int {
	var _arg0 *C.AdwEnumListItem // out
	var _cret C.int              // in

	_arg0 = (*C.AdwEnumListItem)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.adw_enum_list_item_get_value(_arg0)
	runtime.KeepAlive(self)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// EnumListModelOverrider contains methods that are overridable.
type EnumListModelOverrider interface {
}

// EnumListModel: gio.ListModel representing values of a given enum.
//
// AdwEnumListModel contains objects of type enumlistitem.
type EnumListModel struct {
	_ [0]func() // equal guard
	*externglib.Object

	gio.ListModel
}

var (
	_ externglib.Objector = (*EnumListModel)(nil)
)

func classInitEnumListModeller(gclassPtr, data C.gpointer) {
	C.g_type_class_add_private(gclassPtr, C.gsize(unsafe.Sizeof(uintptr(0))))

	goffset := C.g_type_class_get_instance_private_offset(gclassPtr)
	*(*C.gpointer)(unsafe.Add(unsafe.Pointer(gclassPtr), goffset)) = data

}

func wrapEnumListModel(obj *externglib.Object) *EnumListModel {
	return &EnumListModel{
		Object: obj,
		ListModel: gio.ListModel{
			Object: obj,
		},
	}
}

func marshalEnumListModel(p uintptr) (interface{}, error) {
	return wrapEnumListModel(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NewEnumListModel creates a new AdwEnumListModel for enum_type.
//
// The function takes the following parameters:
//
//    - enumType: type of the enum to construct the model from.
//
// The function returns the following values:
//
//    - enumListModel: newly created AdwEnumListModel.
//
func NewEnumListModel(enumType externglib.Type) *EnumListModel {
	var _arg1 C.GType             // out
	var _cret *C.AdwEnumListModel // in

	_arg1 = C.GType(enumType)

	_cret = C.adw_enum_list_model_new(_arg1)
	runtime.KeepAlive(enumType)

	var _enumListModel *EnumListModel // out

	_enumListModel = wrapEnumListModel(externglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _enumListModel
}

// FindPosition finds the position of a given enum value in self.
//
// The function takes the following parameters:
//
//    - value: enum value.
//
// The function returns the following values:
//
func (self *EnumListModel) FindPosition(value int) uint {
	var _arg0 *C.AdwEnumListModel // out
	var _arg1 C.int               // out
	var _cret C.guint             // in

	_arg0 = (*C.AdwEnumListModel)(unsafe.Pointer(externglib.InternObject(self).Native()))
	_arg1 = C.int(value)

	_cret = C.adw_enum_list_model_find_position(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)

	var _guint uint // out

	_guint = uint(_cret)

	return _guint
}

// EnumType gets the type of the enum represented by self.
//
// The function returns the following values:
//
//    - gType: enum type.
//
func (self *EnumListModel) EnumType() externglib.Type {
	var _arg0 *C.AdwEnumListModel // out
	var _cret C.GType             // in

	_arg0 = (*C.AdwEnumListModel)(unsafe.Pointer(externglib.InternObject(self).Native()))

	_cret = C.adw_enum_list_model_get_enum_type(_arg0)
	runtime.KeepAlive(self)

	var _gType externglib.Type // out

	_gType = externglib.Type(_cret)

	return _gType
}
