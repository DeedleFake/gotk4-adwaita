// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: libadwaita-1
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <adwaita.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.adw_carousel_indicator_dots_get_type()), F: marshalCarouselIndicatorDotser},
	})
}

type CarouselIndicatorDots struct {
	gtk.Widget

	gtk.Orientable
}

var _ gextras.Nativer = (*CarouselIndicatorDots)(nil)

func wrapCarouselIndicatorDots(obj *externglib.Object) *CarouselIndicatorDots {
	return &CarouselIndicatorDots{
		Widget: gtk.Widget{
			InitiallyUnowned: externglib.InitiallyUnowned{
				Object: obj,
			},
			Accessible: gtk.Accessible{
				Object: obj,
			},
			Buildable: gtk.Buildable{
				Object: obj,
			},
			ConstraintTarget: gtk.ConstraintTarget{
				Object: obj,
			},
		},
		Orientable: gtk.Orientable{
			Object: obj,
		},
	}
}

func marshalCarouselIndicatorDotser(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapCarouselIndicatorDots(obj), nil
}

// NewCarouselIndicatorDots: create a new CarouselIndicatorDots widget.
func NewCarouselIndicatorDots() *CarouselIndicatorDots {
	var _cret *C.GtkWidget // in

	_cret = C.adw_carousel_indicator_dots_new()

	var _carouselIndicatorDots *CarouselIndicatorDots // out

	_carouselIndicatorDots = wrapCarouselIndicatorDots(externglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _carouselIndicatorDots
}

// Native implements gextras.Nativer. It returns the underlying GObject
// field.
func (v *CarouselIndicatorDots) Native() uintptr {
	return v.Widget.InitiallyUnowned.Object.Native()
}

// Carousel: get the Carousel the indicator uses.
//
// See: adw_carousel_indicator_dots_set_carousel()
func (self *CarouselIndicatorDots) Carousel() *Carousel {
	var _arg0 *C.AdwCarouselIndicatorDots // out
	var _cret *C.AdwCarousel              // in

	_arg0 = (*C.AdwCarouselIndicatorDots)(unsafe.Pointer(self.Native()))

	_cret = C.adw_carousel_indicator_dots_get_carousel(_arg0)

	var _carousel *Carousel // out

	_carousel = wrapCarousel(externglib.Take(unsafe.Pointer(_cret)))

	return _carousel
}

// SetCarousel sets the Carousel to use.
func (self *CarouselIndicatorDots) SetCarousel(carousel *Carousel) {
	var _arg0 *C.AdwCarouselIndicatorDots // out
	var _arg1 *C.AdwCarousel              // out

	_arg0 = (*C.AdwCarouselIndicatorDots)(unsafe.Pointer(self.Native()))
	_arg1 = (*C.AdwCarousel)(unsafe.Pointer(carousel.Native()))

	C.adw_carousel_indicator_dots_set_carousel(_arg0, _arg1)
}
