// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"fmt"
	_ "runtime/cgo"
	"unsafe"

	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: libadwaita-1
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <adwaita.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.adw_centering_policy_get_type()), F: marshalCenteringPolicy},
		{T: externglib.Type(C.adw_view_switcher_policy_get_type()), F: marshalViewSwitcherPolicy},
	})
}

type CenteringPolicy int

const (
	// CenteringPolicyLoose: keep the title centered when possible
	CenteringPolicyLoose CenteringPolicy = iota
	// CenteringPolicyStrict: keep the title centered at all cost
	CenteringPolicyStrict
)

func marshalCenteringPolicy(p uintptr) (interface{}, error) {
	return CenteringPolicy(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

// String returns the name in string for CenteringPolicy.
func (c CenteringPolicy) String() string {
	switch c {
	case CenteringPolicyLoose:
		return "Loose"
	case CenteringPolicyStrict:
		return "Strict"
	default:
		return fmt.Sprintf("CenteringPolicy(%d)", c)
	}
}

type ViewSwitcherPolicy int

const (
	// ViewSwitcherPolicyAuto: automatically adapt to the best fitting mode
	ViewSwitcherPolicyAuto ViewSwitcherPolicy = iota
	// ViewSwitcherPolicyNarrow: force the narrow mode
	ViewSwitcherPolicyNarrow
	// ViewSwitcherPolicyWide: force the wide mode
	ViewSwitcherPolicyWide
)

func marshalViewSwitcherPolicy(p uintptr) (interface{}, error) {
	return ViewSwitcherPolicy(C.g_value_get_enum((*C.GValue)(unsafe.Pointer(p)))), nil
}

// String returns the name in string for ViewSwitcherPolicy.
func (v ViewSwitcherPolicy) String() string {
	switch v {
	case ViewSwitcherPolicyAuto:
		return "Auto"
	case ViewSwitcherPolicyNarrow:
		return "Narrow"
	case ViewSwitcherPolicyWide:
		return "Wide"
	default:
		return fmt.Sprintf("ViewSwitcherPolicy(%d)", v)
	}
}
