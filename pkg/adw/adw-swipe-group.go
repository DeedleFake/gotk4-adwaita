// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
	externglib "github.com/gotk3/gotk3/glib"
)

// #cgo pkg-config: libadwaita-1
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <adwaita.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.adw_swipe_group_get_type()), F: marshalSwipeGrouper},
	})
}

type SwipeGroup struct {
	*externglib.Object

	gtk.Buildable
}

var _ gextras.Nativer = (*SwipeGroup)(nil)

func wrapSwipeGroup(obj *externglib.Object) *SwipeGroup {
	return &SwipeGroup{
		Object: obj,
		Buildable: gtk.Buildable{
			Object: obj,
		},
	}
}

func marshalSwipeGrouper(p uintptr) (interface{}, error) {
	val := C.g_value_get_object((*C.GValue)(unsafe.Pointer(p)))
	obj := externglib.Take(unsafe.Pointer(val))
	return wrapSwipeGroup(obj), nil
}

// NewSwipeGroup: create a new SwipeGroup object.
func NewSwipeGroup() *SwipeGroup {
	var _cret *C.AdwSwipeGroup // in

	_cret = C.adw_swipe_group_new()

	var _swipeGroup *SwipeGroup // out

	_swipeGroup = wrapSwipeGroup(externglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _swipeGroup
}

// AddSwipeable: when the widget is destroyed or no longer referenced elsewhere,
// it will be removed from the swipe group.
func (self *SwipeGroup) AddSwipeable(swipeable Swipeabler) {
	var _arg0 *C.AdwSwipeGroup // out
	var _arg1 *C.AdwSwipeable  // out

	_arg0 = (*C.AdwSwipeGroup)(unsafe.Pointer(self.Native()))
	_arg1 = (*C.AdwSwipeable)(unsafe.Pointer((swipeable).(gextras.Nativer).Native()))

	C.adw_swipe_group_add_swipeable(_arg0, _arg1)
}

// RemoveSwipeable removes a widget from a SwipeGroup.
func (self *SwipeGroup) RemoveSwipeable(swipeable Swipeabler) {
	var _arg0 *C.AdwSwipeGroup // out
	var _arg1 *C.AdwSwipeable  // out

	_arg0 = (*C.AdwSwipeGroup)(unsafe.Pointer(self.Native()))
	_arg1 = (*C.AdwSwipeable)(unsafe.Pointer((swipeable).(gextras.Nativer).Native()))

	C.adw_swipe_group_remove_swipeable(_arg0, _arg1)
}
